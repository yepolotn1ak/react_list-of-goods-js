{"version":3,"sources":["components/GoodList.jsx","App.jsx","index.jsx"],"names":["GoodList","goods","map","good","goodsFromServer","SORT_FILED_ALPHABET","SORT_FILED_LENGTH","isLightStyle","sortField","sortFieldType","App","useState","setSortField","isReversed","setIsReversed","visibleGoods","preparedGoods","sort","good1","good2","localeCompare","length","reverse","getPrepareGoods","className","type","onClick","prev","ReactDOM","render","document","getElementById"],"mappings":"iOAAaA,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,SCCAC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAsB,sBACtBC,EAAoB,iBAyB1B,SAASC,EAAaC,EAAWC,GAC/B,OAAOD,IAAcC,EAAgB,GAAK,WAGrC,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOH,EAAP,KAAkBI,EAAlB,KACA,EAAoCD,oBAAS,GAA7C,mBAAOE,EAAP,KAAmBC,EAAnB,KAWMC,EAxCR,SAAyBd,EAAzB,GAA4D,IAA1BO,EAAyB,EAAzBA,UAAWK,EAAc,EAAdA,WACvCG,EAAa,YAAOf,GAmBxB,OAjBIO,GACFQ,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQX,GACN,KAAKH,EACH,OAAOa,EAAME,cAAcD,GAC7B,KAAKb,EACH,OAAOY,EAAMG,OAASF,EAAME,OAC9B,QACE,OAAO,MAKXR,IACFG,EAAgBA,EAAcM,WAGzBN,EAoBcO,CACnBnB,EACA,CAAEI,YAAWK,eAGf,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,iEAGLjB,EAAaC,EAAWH,GAHnB,gBAKTqB,QAAS,kBAAMd,EAAaP,IAP9B,iCAYA,wBACEoB,KAAK,SACLD,UAAS,oEAGLjB,EAAaC,EAAWF,GAHnB,gBAKToB,QAAS,kBAAMd,EAAaN,IAP9B,4BAYA,wBACEmB,KAAK,SACLD,UAAS,oEAGLX,EAAa,GAAK,WAHb,gBAKTa,QAhDc,WACpBZ,GAAc,SAAAa,GAAI,OAAKA,MAwCnB,sBAYEnB,GAAaK,IACb,wBACEY,KAAK,SACLD,UAAU,4BACVE,QArDkB,WAC1Bd,EAAa,IACbE,GAAc,IAgDR,sBAUJ,cAAC,EAAD,CAAUb,MAAOc,QCjHvBa,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0f5a9822.chunk.js","sourcesContent":["export const GoodList = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li\n        key={good}\n        data-cy=\"Good\"\n      >\n        {good}\n      </li>\n    ))}\n  </ul>\n);\n","import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport { GoodList } from './components/GoodList';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FILED_ALPHABET = 'Sort alphabetically';\nconst SORT_FILED_LENGTH = 'Sort by length';\n\nfunction getPrepareGoods(goods, { sortField, isReversed }) {\n  let preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_FILED_ALPHABET:\n          return good1.localeCompare(good2);\n        case SORT_FILED_LENGTH:\n          return good1.length - good2.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    preparedGoods = preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nfunction isLightStyle(sortField, sortFieldType) {\n  return sortField === sortFieldType ? '' : 'is-light';\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n\n  const toggleReverse = () => {\n    setIsReversed(prev => !prev);\n  };\n\n  const resetSortAndReverse = () => {\n    setSortField('');\n    setIsReversed(false);\n  };\n\n  const visibleGoods = getPrepareGoods(\n    goodsFromServer,\n    { sortField, isReversed },\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`\n            button\n            is-info\n            ${isLightStyle(sortField, SORT_FILED_ALPHABET)}\n          `}\n          onClick={() => setSortField(SORT_FILED_ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`\n            button\n            is-success\n            ${isLightStyle(sortField, SORT_FILED_LENGTH)}\n          `}\n          onClick={() => setSortField(SORT_FILED_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`\n            button\n            is-warning\n            ${isReversed ? '' : 'is-light'}\n          `}\n          onClick={toggleReverse}\n        >\n          Reverse\n        </button>\n\n        {(sortField || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={resetSortAndReverse}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <GoodList goods={visibleGoods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}